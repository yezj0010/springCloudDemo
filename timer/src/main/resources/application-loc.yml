server:
  port: 6601
  tomcat:
    basedir: temp

spring:
  application:
    name: timer #应用名称
  cloud:
    consul:
      host: 192.168.159.131
      port: 8500
      discovery:
        register: true
        hostname: ${spring.cloud.client.ipAddress}
        serviceName: ${spring.application.name}
        preferIpAddress: true
        #healthCheckPath: /check  #自定义健康监测接口
        healthCheckInterval: 15s
        healthCheckCriticalTimeout: 60s
        tags: 定时任务服务
        instanceId: ${spring.application.name}-${spring.cloud.consul.discovery.hostname}
# 数据库连接配置
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/atm?characterEncoding=UTF-8&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    test-while-idle: true #验证连接的有效性,很重要
    test-on-borrow: false #获取连接时候验证，会影响性能
    test-on-return: false #在连接归还到连接池时是否测试该连接
    validation-query: SELECT 1 FROM DUAL #测试语句
    time-between-eviction-runs-millis: 60000 #空闲连接回收的时间间隔，与test-while-idle一起使用，设置1分钟
    min-evictable-idle-time-millis: 300000 #连接池空闲连接的有效时间 ，设置5分钟
    initial-size: 5 #指定启动连接池时，初始建立的连接数量
    max-active: 1000 #指定连接池中最大的活跃连接数.
    max-wait: 60000 #指定连接池等待连接返回的最大等待时间，毫秒单位.
    min-idle: 10 #指定必须保持连接的最小值
  jpa:
    database: mysql
    show-sql: true
    generate-ddl: false
    
feign:
  hystrix:
    enabled: true

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000  #Feign超时时间
#自定义参数
appConfig:
  appName: atmTimer
  appNameCn: 定时任务子系统